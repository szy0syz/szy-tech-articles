(window.webpackJsonp=window.webpackJsonp||[]).push([[51],{184:function(t,a,s){"use strict";s.r(a);var n=s(0),e=Object(n.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("div",{staticClass:"content"},[s("h1",{attrs:{id:"传智博客-mongodb入门"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#传智博客-mongodb入门","aria-hidden":"true"}},[t._v("#")]),t._v(" 传智博客 - MongoDB入门")]),s("h2",{attrs:{id:"nosql简介"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#nosql简介","aria-hidden":"true"}},[t._v("#")]),t._v(" NoSQL简介")]),s("ul",[s("li",[s("p",[t._v("NoSQL("),s("code",[t._v("Not Only SQL")]),t._v(")，意即“不仅仅是SQL” ,指的是非关系型的数据库 。是一项全新的数据库革命性运动，早期就有人提出，发展至2009年趋势越发高涨。NoSQL的拥护者们提倡运用非关系型的数据存储，相对于铺天盖地的关系型数据库运用，这一概念无疑是一种全新的思维的注入。")])]),s("li",[s("p",[t._v("关系型数据库中的表都是存储一些格式化的数据结构，每条记录的字段的组成都一样，即使不是每条记录都需要所有的字段，但数据库会为每条数据分配所有的字段。而非关系型数据库以键值对(key-value)存储，它的结构不固定，每一条记录可以有不一样的键，每条记录可以根据需要增加一些自己的键值对，这样就不会局限于固定的结构，可以减少一些时间和空间的开销。")])]),s("li",[s("p",[t._v("关系型数据库中的结构： "),s("code",[t._v("database --\x3e table --\x3e record --\x3e field")])])]),s("li",[s("p",[t._v("非关系型数据库中结构(实质是面向对象的数据库)： "),s("code",[t._v("collection --\x3e document --\x3e JSON")])])])]),s("h3",{attrs:{id:"nosql数据库优缺点"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#nosql数据库优缺点","aria-hidden":"true"}},[t._v("#")]),t._v(" NoSql数据库优缺点")]),s("ul",[s("li",[s("p",[t._v("在优势方面主要体现在下面几点：")]),s("ul",[s("li",[t._v("简单的扩展")]),s("li",[t._v("快速的读写")]),s("li",[t._v("低廉的成本")]),s("li",[t._v("灵活的数据模型")])])]),s("li",[s("p",[t._v("在不足方面主要有下面几点：")]),s("ul",[s("li",[t._v("不提供对SQL的支持")]),s("li",[t._v("支持的特性不够丰富")]),s("li",[t._v("现有的产品部够成熟")]),s("li",[t._v("事务支持不够好")])])])]),s("h3",{attrs:{id:"mongodb-数据库"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#mongodb-数据库","aria-hidden":"true"}},[t._v("#")]),t._v(" MongoDB 数据库")]),s("ul",[s("li",[s("p",[t._v("C++语言编写, 高性能 易部署 易使用")]),s("ul",[s("li",[t._v("面向集合存储, json")]),s("li",[t._v("模式自由")]),s("li",[t._v("支持动态查询")]),s("li",[t._v("支持完全索引")]),s("li",[t._v("支持复制和故障恢复")]),s("li",[t._v("使用高效的二进制数据存储, 包括大型对象")]),s("li",[t._v("文件存储格式为 BSON")])])]),s("li",[s("p",[t._v("MongoDB与关系型数据库对比")])])]),s("table",[s("thead",[s("tr",[s("th",{staticStyle:{"text-align":"center"}},[t._v("对比项")]),s("th",{staticStyle:{"text-align":"center"}},[t._v("MongoDB")]),s("th",{staticStyle:{"text-align":"center"}},[t._v("MySQL / Oracle")])])]),s("tbody",[s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("表")]),s("td",{staticStyle:{"text-align":"center"}},[t._v("集合collection")]),s("td",{staticStyle:{"text-align":"center"}},[t._v("二维表table")])]),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("表的一行数据row")]),s("td",{staticStyle:{"text-align":"center"}},[t._v("文档document")]),s("td",{staticStyle:{"text-align":"center"}},[t._v("一条记录record")])]),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("表字段")]),s("td",{staticStyle:{"text-align":"center"}},[t._v("健key")]),s("td",{staticStyle:{"text-align":"center"}},[t._v("字段field")])]),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("字段值")]),s("td",{staticStyle:{"text-align":"center"}},[t._v("值value")]),s("td",{staticStyle:{"text-align":"center"}},[t._v("值value")])]),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("主外键")]),s("td",{staticStyle:{"text-align":"center"}},[t._v("无")]),s("td",{staticStyle:{"text-align":"center"}},[t._v("PK,FK")])]),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("灵活度扩展性")]),s("td",{staticStyle:{"text-align":"center"}},[t._v("极高")]),s("td",{staticStyle:{"text-align":"center"}},[t._v("差")])])])]),s("ul",[s("li",[t._v("文档(document) 是 Mongodb 的最基本对象, 都有一个 "),s("code",[t._v("objectId")]),t._v(", "),s("code",[t._v('{"id": ObjectId()}')])]),s("li",[t._v("集合("),s("code",[t._v("collection")]),t._v(")是文档的聚合")]),s("li",[t._v("0 和 1 也可以表示 true 或 false")]),s("li",[t._v("数字类型64位浮点数, 整数都会被转换成64位浮点数")])]),s("h2",{attrs:{id:"mongodb操作"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#mongodb操作","aria-hidden":"true"}},[t._v("#")]),t._v(" MongoDB操作")]),s("blockquote",[s("p",[t._v("MongoDB中有很多隐式")])]),s("h2",{attrs:{id:"索引"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#索引","aria-hidden":"true"}},[t._v("#")]),t._v(" 索引")]),s("p",[t._v("索引就是用来加速查询的。数据库索引与书籍的索引类似：有了索引就不需要翻遍整本书，数据库这可以直接在索引中查找，使得查找速度能提高几个数量级。在索引中找到条目以后，就可以直接跳转到目标文档的位置。")]),s("ul",[s("li",[s("code",[t._v("explain()")]),t._v("是非常有用的工具，会帮助你获得查询方面诸多有用的信息。只要对游标调用方法，就可以得到查询细节。explain会返回一个文档，而不是游标本身。如："),s("code",[t._v("db.test.find().explain()")]),t._v("查询该查询的执行性能")])]),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{attrs:{class:"token comment"}},[t._v("// 创建索引")]),t._v("\ndb"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("shares"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("ensureIndex")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" barCode"),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{attrs:{class:"token number"}},[t._v("1")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),s("span",{attrs:{class:"token comment"}},[t._v("// 创建唯一索引(不允许重复)")]),t._v("\ndb"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("shares"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("ensureIndex")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("barCode"),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{attrs:{class:"token number"}},[t._v("1")]),s("span",{attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("unique"),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{attrs:{class:"token boolean"}},[t._v("true")]),s("span",{attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),s("span",{attrs:{class:"token comment"}},[t._v("// 查看关于索引(包含整个集合)信息")]),t._v("\ndb"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("shares"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("stats")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),s("span",{attrs:{class:"token comment"}},[t._v("// 查询使用索引的情况")]),t._v("\ndb"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("shares"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("find")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("shares"),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{attrs:{class:"token number"}},[t._v("2")]),s("span",{attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("explain")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),s("span",{attrs:{class:"token comment"}},[t._v("// 删除索引")]),t._v("\ndb"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("shares"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("dropIndex")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" barCode"),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{attrs:{class:"token number"}},[t._v("1")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("h2",{attrs:{id:"固定集合"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#固定集合","aria-hidden":"true"}},[t._v("#")]),t._v(" 固定集合")]),s("blockquote",[s("p",[t._v("固定集合指的是事先创建而且大小固定的集合。")])]),s("p",[t._v("固定集合的特性：固定集合很像环形队列，如果空间不足，最早的文档就会被删除，为新的文档腾出空间。最合适的场景用于任何想要自动淘汰过期属性的场景，没有太多的操作限制。")]),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{attrs:{class:"token comment"}},[t._v("// 创建一个固定集合，其大小限制100KB，集合的文档限制100000条")]),t._v("\n"),s("span",{attrs:{class:"token comment"}},[t._v("// size指定文档数量，max指定集合大小")]),t._v("\ndb"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("createCollection")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token string"}},[t._v('"collectionName"')]),t._v("， "),s("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" capped"),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),s("span",{attrs:{class:"token boolean"}},[t._v("true")]),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" size"),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{attrs:{class:"token number"}},[t._v("100000")]),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" max"),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{attrs:{class:"token number"}},[t._v("100")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("p",[t._v("当指定文档数量上限时，必须同时指定大小。淘汰机制会用或逻辑或判定条件启动淘汰机制。")]),s("h2",{attrs:{id:"备份与恢复"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#备份与恢复","aria-hidden":"true"}},[t._v("#")]),t._v(" 备份与恢复")]),s("h3",{attrs:{id:"备份"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#备份","aria-hidden":"true"}},[t._v("#")]),t._v(" 备份")]),s("p",[s("code",[t._v("mongodump -h dbhost -d dbname -o output-dbdirectory")])]),s("ul",[s("li",[s("code",[t._v("-h")]),t._v(" host:port")]),s("li",[s("code",[t._v("-d")]),t._v(" dbname")]),s("li",[s("code",[t._v("-o")]),t._v(" output dbdirectory")])]),s("h3",{attrs:{id:"恢复"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#恢复","aria-hidden":"true"}},[t._v("#")]),t._v(" 恢复")]),s("p",[s("code",[t._v("mongorestore -h dbhost -d dbname -directoryperdb dbdirectory")])]),s("ul",[s("li",[s("code",[t._v("-h")]),t._v(" host:27017")]),s("li",[s("code",[t._v("-d")]),t._v(" dbname")]),s("li",[s("code",[t._v("-directoryperdb")]),t._v(" 每个数据库独立文件")]),s("li",[s("code",[t._v("dbdirectory")]),t._v(" 所备份的数据目录")])]),s("h2",{attrs:{id:"导入与导出"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#导入与导出","aria-hidden":"true"}},[t._v("#")]),t._v(" 导入与导出")]),s("p",[t._v("这里导出的数据是json数据，和备份出来的二进制数据不一样。")]),s("p",[s("code",[t._v("mongoexport -h dbhost -d dbname -c collectionName -o output")])]),s("ul",[s("li",[s("code",[t._v("-o")]),t._v(" output filename 需指明文件名")])]),s("p",[s("code",[t._v("mongoimport -h dbhost -d dbname -c collectionname output")])]),s("ul",[s("li",[s("code",[t._v("output")]),t._v(" 导出是的文件名")])]),s("h2",{attrs:{id:"安全和认证"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#安全和认证","aria-hidden":"true"}},[t._v("#")]),t._v(" 安全和认证")]),s("p",[t._v("每个MongoDB实例中的数据库都可以有许多用户。如果开启了安全检查，则只有数据库认证用户才能执行读写操作。在认证的上下文中，MongoDB会将普通的数据作为admin数据库处理。admin数据库中的用户被视为超级用户。\n在认证后，管理员可以读写所有数据库，执行特定的管理命令。\n在开启安全检查之前，必须保证有一个管理员用户。")]),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("use admin\ndb"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("addUser")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token string"}},[t._v('"username"')]),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{attrs:{class:"token string"}},[t._v('"password"')]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),s("span",{attrs:{class:"token comment"}},[t._v("// 在test数据库中创建普通账号")]),t._v("\nuse test\ndb"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("addUser")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token string"}},[t._v('"test1"')]),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{attrs:{class:"token string"}},[t._v('"123"')]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\ndb"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("addUser")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token string"}},[t._v('"test2"')]),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{attrs:{class:"token string"}},[t._v('"123"')]),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{attrs:{class:"token boolean"}},[t._v("true")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{attrs:{class:"token comment"}},[t._v("//test2用户仅有读取数据的权限")]),t._v("\n\n"),s("span",{attrs:{class:"token comment"}},[t._v("// 开启验证模式")]),t._v("\nmongod "),s("span",{attrs:{class:"token operator"}},[t._v("--")]),t._v("dbpath d"),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),s("span",{attrs:{class:"token operator"}},[t._v("/")]),t._v("data"),s("span",{attrs:{class:"token operator"}},[t._v("/")]),t._v("db "),s("span",{attrs:{class:"token operator"}},[t._v("--")]),t._v("auth\n")])])]),s("h2",{attrs:{id:"主从复制-主从集群"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#主从复制-主从集群","aria-hidden":"true"}},[t._v("#")]),t._v(" 主从复制(主从集群)")]),s("blockquote",[s("p",[t._v("主从复制是MongoDB最常用的复制方式。")])]),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{attrs:{class:"token comment"}},[t._v("// 启动主数据库实例")]),t._v("\nmongod "),s("span",{attrs:{class:"token operator"}},[t._v("--")]),t._v("master\n\n"),s("span",{attrs:{class:"token comment"}},[t._v("// 启动从属数据库实例并连接主服务库")]),t._v("\nmongod "),s("span",{attrs:{class:"token operator"}},[t._v("--")]),t._v("slave "),s("span",{attrs:{class:"token operator"}},[t._v("--")]),t._v("source master_address\n")])])]),s("p",[t._v("MongoDB的复制至少需要两个服务器或者节点。其中一个是主节点，负责处理客户端请求，其它的都是从节点，负责映射主节点的数据。\n主节点记录在其上执行的所有操作。从节点定期轮询主节点获得这些操作，然后对自己的数据副本执行这些操作。由于和主节点执行了相同的操作，从节点就能保持与主节点的数据同步。")]),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("mongod "),s("span",{attrs:{class:"token operator"}},[t._v("--")]),t._v("dbpath c"),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\\data\\master "),s("span",{attrs:{class:"token operator"}},[t._v("--")]),t._v("master "),s("span",{attrs:{class:"token operator"}},[t._v("--")]),t._v("port "),s("span",{attrs:{class:"token number"}},[t._v("10000")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("--")]),t._v("directoryperdb\n\nmongod "),s("span",{attrs:{class:"token operator"}},[t._v("--")]),t._v("dbpath c"),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\\data\\slave\\slave1 "),s("span",{attrs:{class:"token operator"}},[t._v("--")]),t._v("port "),s("span",{attrs:{class:"token number"}},[t._v("10001")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("--")]),t._v("slave "),s("span",{attrs:{class:"token operator"}},[t._v("--")]),t._v("source localhost"),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),s("span",{attrs:{class:"token number"}},[t._v("10000")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("--")]),t._v("directoryperdb\n\nmongod "),s("span",{attrs:{class:"token operator"}},[t._v("--")]),t._v("dbpath c"),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\\data\\slave\\slave1 "),s("span",{attrs:{class:"token operator"}},[t._v("--")]),t._v("port "),s("span",{attrs:{class:"token number"}},[t._v("10002")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("--")]),t._v("slave "),s("span",{attrs:{class:"token operator"}},[t._v("--")]),t._v("source localhost"),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),s("span",{attrs:{class:"token number"}},[t._v("10000")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("--")]),t._v("directoryperdb\n")])])]),s("blockquote",[s("p",[t._v("注意：主节点可以进行增删改查所有操作，而在从节点只能进行查询的操作。")])]),s("h2",{attrs:{id:"副本集"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#副本集","aria-hidden":"true"}},[t._v("#")]),t._v(" 副本集")]),s("blockquote",[s("p",[t._v("副本集就是有自动故障恢复功能的主从集群。")])]),s("p",[s("img",{attrs:{src:"https://docs.mongodb.com/manual/_images/replica-set-read-write-operations-primary.bakedsvg.svg",alt:"repl-1"}}),s("img",{attrs:{src:"https://docs.mongodb.com/manual/_images/replica-set-primary-with-two-secondaries.bakedsvg.svg",alt:"repl-2"}}),s("img",{attrs:{src:"https://docs.mongodb.com/manual/_images/replica-set-primary-with-secondary-and-arbiter.bakedsvg.svg",alt:"repl-3"}}),s("img",{attrs:{src:"https://docs.mongodb.com/manual/_images/replica-set-trigger-election.bakedsvg.svg",alt:"repl-4"}})]),s("p",[t._v("主从集群和副本集最大的区别就是副本集没有固定的“主节点”；整个集群会选出一个“主节点”，当其挂掉后，又在剩下的从节点中选中其他节点为“主节点”。")]),s("p",[t._v("副本集总有三种节点：和。")]),s("ul",[s("li",[t._v("一个主要节点(primary)")]),s("li",[t._v("一个或多个次要节点(secondary)，其中又分为：\n"),s("ul",[s("li",[t._v("standard 常规节点，存储一份完整的数据副本，参与选举投票，有可能成为primary节点;")]),s("li",[t._v("passive 被动节点，存储了完整的数据副本，参与投票，不能成为primary节点;")]),s("li",[t._v("arbiter 仲裁节点，只参与投票，不接收复制的数据，也不能成为primary节点。")])])])]),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{attrs:{class:"token comment"}},[t._v("// 启动三台")]),t._v("\nmongod "),s("span",{attrs:{class:"token operator"}},[t._v("--")]),t._v("replSet jerry "),s("span",{attrs:{class:"token operator"}},[t._v("--")]),t._v("dbpath c"),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\\data\\rs\\data\\"),s("span",{attrs:{class:"token number"}},[t._v("10000")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("--")]),t._v("port "),s("span",{attrs:{class:"token number"}},[t._v("10000")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("--")]),t._v("logpath c"),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\\data\\rs\\log\\"),s("span",{attrs:{class:"token number"}},[t._v("10000.")]),t._v("log "),s("span",{attrs:{class:"token operator"}},[t._v("--")]),t._v("logappend\n\nmongod "),s("span",{attrs:{class:"token operator"}},[t._v("--")]),t._v("replSet jerry "),s("span",{attrs:{class:"token operator"}},[t._v("--")]),t._v("dbpath c"),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\\data\\rs\\data\\"),s("span",{attrs:{class:"token number"}},[t._v("10001")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("--")]),t._v("port "),s("span",{attrs:{class:"token number"}},[t._v("10001")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("--")]),t._v("logpath c"),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\\data\\rs\\log\\"),s("span",{attrs:{class:"token number"}},[t._v("10001.")]),t._v("log "),s("span",{attrs:{class:"token operator"}},[t._v("--")]),t._v("logappend\n\nmongod "),s("span",{attrs:{class:"token operator"}},[t._v("--")]),t._v("replSet jerry "),s("span",{attrs:{class:"token operator"}},[t._v("--")]),t._v("dbpath c"),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\\data\\rs\\data\\"),s("span",{attrs:{class:"token number"}},[t._v("10002")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("--")]),t._v("port "),s("span",{attrs:{class:"token number"}},[t._v("10002")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("--")]),t._v("logpath c"),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\\data\\rs\\log\\"),s("span",{attrs:{class:"token number"}},[t._v("10002.")]),t._v("log "),s("span",{attrs:{class:"token operator"}},[t._v("--")]),t._v("logappend\n\n"),s("span",{attrs:{class:"token comment"}},[t._v("// 添加secondary节点")]),t._v("\n"),s("span",{attrs:{class:"token operator"}},[t._v(">")]),t._v(" rs"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("add")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token string"}},[t._v('"localhost:10002"')]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{attrs:{class:"token comment"}},[t._v("// 查看副本集状态")]),t._v("\nrs"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("status")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{attrs:{class:"token comment"}},[t._v("// 查看副本集配置")]),t._v("\nrs"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("conf")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("h2",{attrs:{id:"分片"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#分片","aria-hidden":"true"}},[t._v("#")]),t._v(" 分片")]),s("blockquote",[s("p",[t._v("分片(sharding)是指将数据拆分，将其分散存在不同的机器上的过程。有时也用分区(partitioning)来表示这个概念。将数据分散到不同的机器上，不需要功能强大的大型计算机就可以储存更多的数据，处理更多的负载。")])]),s("p",[t._v('MongoDB分片的基本思想就是将集合切分成小块。这些块分散到若干片里面，每个片只负责总数据的一部分。应用程序不必知道哪片对应哪些数据，甚至不需要知道数据已经被拆分了，所以在分片之前要运行一个路由进程，该进程名为mongos。这个路由器知道所有数据的存放位置，所以应用可以连接它来正常发送请求。对应用来说，它仅知道连接了一个普通的mongod。路由器知道数据和片的对应关系，能够转发请求道正确的片上。如果请求有了回应，路由器将其收集起来回送给应用。\n设置分片时，需要从集合里面选一个键，用该键的值作为数据拆分的依据。这个键称为片键(shard key)。\n用个例子来说明这个过程：假设有个文档集合表示的是人员。如果选择名字("name")作为片键，第一片可能会存放名字以A~F开头的文档，第二片存的G~P的名字，第三片存的Q~Z的名字。随着添加或者删除片，MongoDB会重新平衡数据，使每片的流量都比较均衡，数据量也在合理范围内。')]),s("p",[s("img",{attrs:{src:"http://ofx24fene.bkt.clouddn.com//blog/2018/sharding.png",alt:"sharding"}}),s("img",{attrs:{src:"http://ofx24fene.bkt.clouddn.com//blog/2018/sharding_.png",alt:"sharding"}})]),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{attrs:{class:"token comment"}},[t._v("// 开启configservs副本集")]),t._v("\nmongod "),s("span",{attrs:{class:"token operator"}},[t._v("--")]),t._v("port "),s("span",{attrs:{class:"token number"}},[t._v("10000")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("--")]),t._v("dbpath c"),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\\data\\sharding\\data\\"),s("span",{attrs:{class:"token number"}},[t._v("10000")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("--")]),t._v("directoryperdb "),s("span",{attrs:{class:"token operator"}},[t._v("--")]),t._v("logappend "),s("span",{attrs:{class:"token operator"}},[t._v("--")]),t._v("logpath c"),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\\data\\sharding\\log\\"),s("span",{attrs:{class:"token number"}},[t._v("10000.")]),t._v("log\nmongod "),s("span",{attrs:{class:"token operator"}},[t._v("--")]),t._v("port "),s("span",{attrs:{class:"token number"}},[t._v("10001")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("--")]),t._v("dbpath c"),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\\data\\sharding\\data\\"),s("span",{attrs:{class:"token number"}},[t._v("10001")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("--")]),t._v("directoryperdb "),s("span",{attrs:{class:"token operator"}},[t._v("--")]),t._v("logappend "),s("span",{attrs:{class:"token operator"}},[t._v("--")]),t._v("logpath c"),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\\data\\sharding\\log\\"),s("span",{attrs:{class:"token number"}},[t._v("10001.")]),t._v("log "),s("span",{attrs:{class:"token operator"}},[t._v("--")]),t._v("replSet jerry\nmongod "),s("span",{attrs:{class:"token operator"}},[t._v("--")]),t._v("port "),s("span",{attrs:{class:"token number"}},[t._v("10002")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("--")]),t._v("dbpath c"),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\\data\\sharding\\data\\"),s("span",{attrs:{class:"token number"}},[t._v("10002")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("--")]),t._v("directoryperdb "),s("span",{attrs:{class:"token operator"}},[t._v("--")]),t._v("logappend "),s("span",{attrs:{class:"token operator"}},[t._v("--")]),t._v("logpath c"),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\\data\\sharding\\log\\"),s("span",{attrs:{class:"token number"}},[t._v("10002.")]),t._v("log "),s("span",{attrs:{class:"token operator"}},[t._v("--")]),t._v("replSet jerry\n\nmongos "),s("span",{attrs:{class:"token operator"}},[t._v("--")]),t._v("port "),s("span",{attrs:{class:"token number"}},[t._v("15000")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("--")]),t._v("configdb "),s("span",{attrs:{class:"token string"}},[t._v('"jerry/localhost:20000"')]),t._v("\n")])])])])}],!1,null,null,null);a.default=e.exports}}]);