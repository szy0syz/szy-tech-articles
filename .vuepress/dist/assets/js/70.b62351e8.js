(window.webpackJsonp=window.webpackJsonp||[]).push([[70],{161:function(t,a,s){"use strict";s.r(a);var n=s(0),e=Object(n.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("div",{staticClass:"content"},[s("h1",{attrs:{id:"微信小程序自学笔记"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#微信小程序自学笔记","aria-hidden":"true"}},[t._v("#")]),t._v(" 微信小程序自学笔记")]),s("ul",[s("li",[s("p",[t._v("程序官方出品，WeUI+Weapp，小项目，很不错。"),s("code",[t._v("https://github.com/Tencent/weui-wxss、http://www.runoob.com/w3cnote/weui-for-weixin-web.html")])])]),s("li",[s("p",[s("code",[t._v("<scroll-view>")]),t._v('标签是个奇葩的存在，你对它设置的任何布局都不生效，有点像开了"天神下凡"的山丘之王~')])]),s("li",[s("p",[t._v("在wxml里，使用"),s("code",[t._v("{ { vars js code } }")]),t._v("就可以数据双向绑定了")])])]),s("h2",{attrs:{id:"小程序wepy框架笔记"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#小程序wepy框架笔记","aria-hidden":"true"}},[t._v("#")]),t._v(" 小程序wepy框架笔记")]),s("blockquote",[s("p",[t._v("哎，感觉怎么路越走越陡啊，直接上这么高大上的框架到底好不好啊。")])]),s("ul",[s("li",[s("p",[t._v("因为wepy精简了四个文件的结构，所以wepy里加载文件时只需要到两层，例如"),s("code",[t._v("pages/hot")])])]),s("li",[s("p",[t._v("使用"),s("code",[t._v("wepy-com-toast")]),t._v("组件")])])]),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{attrs:{class:"token comment"}},[t._v("// 1. 引入组件")]),t._v("\n"),s("span",{attrs:{class:"token keyword"}},[t._v("import")]),t._v(" Toast "),s("span",{attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),s("span",{attrs:{class:"token string"}},[t._v("'wepy-com-toast'")]),t._v("\n\n"),s("span",{attrs:{class:"token comment"}},[t._v("// 2. 在components对象中定义组件")]),t._v("\ncomponents "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    toast"),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Toast\n"),s("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{attrs:{class:"token comment"}},[t._v("// 3. 在<template>里为toast留个坑")]),t._v("\n"),s("span",{attrs:{class:"token operator"}},[t._v("<")]),t._v("toast "),s("span",{attrs:{class:"token operator"}},[t._v("/")]),s("span",{attrs:{class:"token operator"}},[t._v(">")]),t._v("\n\n"),s("span",{attrs:{class:"token comment"}},[t._v("// 4. 在methods对象中定义方法")]),t._v("\nmethods "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{attrs:{class:"token function"}},[t._v("toast")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{attrs:{class:"token keyword"}},[t._v("let")]),t._v(" promise "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{attrs:{class:"token keyword"}},[t._v("this")]),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("$invoke")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token string"}},[t._v("'toast'")]),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{attrs:{class:"token string"}},[t._v("'show'")]),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n          title"),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{attrs:{class:"token string"}},[t._v("'自定义标题'")]),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n          img"),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{attrs:{class:"token string"}},[t._v("'https://raw.githubusercontent.com/kiinlam/wetoast/master/images/star.png'")]),t._v("\n        "),s("span",{attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),s("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" t "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" arguments\n        promise"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("then")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("d"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n          console"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("dir")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("d"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{attrs:{class:"token comment"}},[t._v("//对象：toast的属性，包含title、img等")]),t._v("\n          console"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("dir")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("arguments"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n          "),s("span",{attrs:{class:"token comment"}},[t._v("//哇，内部函数的this竟然被绑定到了外部函数的this上")]),t._v("\n          console"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("log")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("t "),s("span",{attrs:{class:"token operator"}},[t._v("===")]),t._v(" arguments"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),s("span",{attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{attrs:{class:"token comment"}},[t._v("// 5. 最后肯定就是在元素上加事件绑定~")]),t._v("\n"),s("span",{attrs:{class:"token operator"}},[t._v("<")]),t._v("button @tap"),s("span",{attrs:{class:"token operator"}},[t._v("=")]),s("span",{attrs:{class:"token string"}},[t._v('"toast"')]),t._v(" size"),s("span",{attrs:{class:"token operator"}},[t._v("=")]),s("span",{attrs:{class:"token string"}},[t._v('"mini"')]),s("span",{attrs:{class:"token operator"}},[t._v(">")]),t._v("第三方组件"),s("span",{attrs:{class:"token operator"}},[t._v("<")]),s("span",{attrs:{class:"token operator"}},[t._v("/")]),t._v("button"),s("span",{attrs:{class:"token operator"}},[t._v(">")]),t._v("\n")])])]),s("ul",[s("li",[s("p",[t._v("在wepy的page实例就业页面实例，page实例随便用页面跳转，而在components实例就不该用页面跳转。")])]),s("li",[s("p",[t._v("在wepy的component实例中，就不该用onload方法，因为组件的onload方法会在页面onload方法前执行，好坑啊。")])]),s("li",[s("p",[t._v("在wepy程序中，数据放在page的实例中，不要放在组件中。这个真是我自己写业务，写不下去后悟出来的。")])]),s("li",[s("p",[t._v("原来新版wepy的所有请求都默认是回调函数模式，保持和官方的一致，可能是降低难度，但劳资为了一个promise调试了3个多小时，就是没发现这个中间件，我靠。")])]),s("li",[s("p",[t._v("在wepy添加中间件所有请求全部promise化后，await后还得加脏数据处理$apply()或者数据不同步")])]),s("li",[s("p",[t._v("我懂了，每次在异步后都要进行脏数据数据$apply()")])]),s("li",[s("p",[t._v("在promise对象中，resolve(res)并不是return，所以可以在resolve(res)后继续写代码")])]),s("li",[s("p",[t._v("子组件的onload方法要在父页面组件onload方法前执行，好tm费解的机制。")])]),s("li",[s("p",[t._v("wepy -> props 也可以用于页面渲染")])]),s("li",[s("p",[t._v("wepy中view标签的子元素必须换行规规矩矩的来才正常显示")])]),s("li",[s("p",[t._v("navigate元素是块级元素，修改display还不行")])]),s("li",[s("p",[t._v("wepy组件要有个顺序，要不然插件还warnning：先template然script后style")])]),s("li",[s("p",[t._v("wepy组件中，不要的component、data、onLoad...没有就不要留空，直接别写，否则warnning")])]),s("li",[s("p",[t._v("wepy组件中传值，如果是静态的话只能传String，动态的可以选择不同步，单向同步和双向同步")])]),s("li",[s("p",[t._v("父子组件传值方式 "),s("code",[t._v("<child :myData='varName'></child>")])])]),s("li",[s("p",[t._v("在await函数后记得"),s("code",[t._v("this.$apply()")]),t._v("处理赃数据")])]),s("li",[s("p",[t._v("在wepy的redux中，直接从action加载命令时就可以有action.payload，如果从types加载命令着会有target元素")])]),s("li",[s("p",[t._v("在wepy的redux中，"),s("code",[t._v("@connect")]),t._v("是修饰器啊，怎么我又没看到这个"),s("code",[t._v("@")]),t._v("，晕死。")])]),s("li",[s("p",[t._v("看看"),s("code",[t._v("wepy")]),t._v("实例到底有些啥属性")])])]),s("table",[s("thead",[s("tr",[s("th",{staticStyle:{"text-align":"center"}},[t._v("name")]),s("th",{staticStyle:{"text-align":"center"}},[t._v("x")]),s("th",{staticStyle:{"text-align":"center"}},[t._v("y")])])]),s("tbody",[s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("$copy")]),s("td",{staticStyle:{"text-align":"center"}}),s("td",{staticStyle:{"text-align":"center"}})]),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("$createApp")]),s("td",{staticStyle:{"text-align":"center"}}),s("td",{staticStyle:{"text-align":"center"}})]),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("$createPage")]),s("td",{staticStyle:{"text-align":"center"}}),s("td",{staticStyle:{"text-align":"center"}})]),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("$extend")]),s("td",{staticStyle:{"text-align":"center"}}),s("td",{staticStyle:{"text-align":"center"}})]),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("$has")]),s("td",{staticStyle:{"text-align":"center"}}),s("td",{staticStyle:{"text-align":"center"}})])])]),s("ul",[s("li",[t._v("没事别在新页面中调用空onLoad钩子函数，否则报错：出现脚本错误或者未正确调用 Page()")])]),s("h3",{attrs:{id:"wepy-v2ex-demo笔记"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#wepy-v2ex-demo笔记","aria-hidden":"true"}},[t._v("#")]),t._v(" wepy-v2ex-demo笔记")]),s("h4",{attrs:{id:"流程"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#流程","aria-hidden":"true"}},[t._v("#")]),t._v(" 流程")]),s("ul",[s("li",[t._v("流程\n"),s("ul",[s("li",[t._v("首页设hot，实例化"),s("code",[t._v("wepy.page")]),t._v("类生成实例对象，然后用封装好的api将数据存page中。注册子组件topicList，通过动态绑定props传递数据进子组件展示数据；")]),s("li",[t._v("第二页设latest，实例化"),s("code",[t._v("wepy.page")]),t._v("类生成实例对象并api调用数据。动态绑定属性到topicList组件展示，同上。")]),s("li",[t._v("第三页为nodes页，实例化"),s("code",[t._v("wepy.page")]),t._v("类生成实例对象并api调用数据存page中。动态绑定属性到nodeList组件展示。同时在page对象上为onReachBottom行为注册事件，并在events中定义函数，如果触发page组件的行为则用"),s("code",[t._v("this.$broadcast('getMoreNodes', 100)")]),t._v("广播行为到子组件，注册子组件getMoreNodes事件")])])]),s("li",[t._v("在nodeList组件中，因为要分段显示数据，而父组件传进来的只绑定在props上，但子组件的onload又先在父组件onload先执行，则只能在子组件中利用watcher监控props里传入的数据，等父组件异步获取到数据，并传进来后执行展示。")])]),s("h3",{attrs:{id:"wepy-one-学习笔记"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#wepy-one-学习笔记","aria-hidden":"true"}},[t._v("#")]),t._v(" wepy-one 学习笔记")])])}],!1,null,null,null);a.default=e.exports}}]);